{"version":3,"sources":["components/Filter/Filter.module.css","components/Forms/Form.module.css","components/Forms/Form.js","components/Todolist/Todolist.js","components/Filter/Filter.js","App.js","index.js","components/Todolist/Todolist.module.css"],"names":["module","exports","initialContact","name","number","association","Form","contacts","hendlerSubmitForm","useState","contact","setContact","handleChange","e","target","value","onSubmit","preventDefault","alert","addContact","id","shortid","generate","className","s","m","title","form__name","onChange","type","pattern","required","form__number","radio__btn","checked","Todolist","handleDeleteContact","filterTextSearch","console","log","filteredContacts","filter","toLowerCase","includes","contacts__list","map","item","name__contact","btn","onClick","Filter","handleFilter","label","input","localStorageKey","App","setContacts","setFilter","useEffect","currentTartegContsacts","JSON","parse","localStorage","getItem","setItem","stringify","filtercontacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b150514c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3ao3E\",\"input\":\"Filter_input__2xvup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__3IiID\",\"title\":\"Form_title__3uiT0\"};","import React from 'react';\nimport { useState } from 'react';\n// import { Component } from 'react';\nimport s from './Form.module.css';\nimport shortid from 'shortid';\n\nconst initialContact = {\n  name: '',\n  number: '',\n  association: 'Other',\n};\n\nconst Form = ({ contacts, hendlerSubmitForm }) => {\n  const [contact, setContact] = useState(initialContact);\n  //  const [id, setId] = useState('');\n  const handleChange = e =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const handleSabmit = e => {\n    e.preventDefault();\n\n    for (const { name } of contacts) {\n      if (name === contact.name) {\n        alert(`${name} is already in contacts`);\n\n        return;\n      }\n    }\n\n    const addContact = {\n      id: shortid.generate(),\n      name: contact.name,\n      number: contact.number,\n      association: contact.association,\n    };\n\n    hendlerSubmitForm(addContact);\n\n    setContact({ id: '', name: '', number: '', association: 'Other' });\n  };\n\n  const { name, number, association } = contact;\n  return (\n    <form onSubmit={handleSabmit} className={s.m}>\n      <h2 className={s.title}>Phonebook</h2>\n      <label className={s.form__name}>\n        Name\n        <input\n          // id={contactIdName}\n          onChange={handleChange}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.form__number}>\n        Number\n        <input\n          // id={contactIdNumber}\n          onChange={handleChange}\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <div className={s.radio__btn}>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Work\"\n            onChange={handleChange}\n            checked={association === 'Work'}\n          />\n          Work\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Family\"\n            onChange={handleChange}\n            checked={association === 'Family'}\n          />\n          Family\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Friends\"\n            onChange={handleChange}\n            checked={association === 'Friends'}\n          />\n          Friends\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Other\"\n            onChange={handleChange}\n            checked={association === 'Other'}\n          />\n          Other\n        </label>\n      </div>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import s from './Todolist.module.css';\nimport PropTypes from 'prop-types';\n// import { Form } from '../Forms/Form';\n// import { App } from '../../App';\nimport React from 'react';\n\nconst Todolist = ({ contacts, handleDeleteContact, filterTextSearch }) => {\n  console.log('LIST', contacts); // const filterContacts = contactsOll.filter({ name })=> name.toLowerCase().includes(filterContactsOll.toLowerCase());\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filterTextSearch.toLowerCase()),\n  );\n\n  return (\n    <ul className={s.contacts__list}>\n      {filteredContacts.map(({ id, name, number, association }) => {\n        return (\n          <li key={id} className={s.item}>\n            {' '}\n            <p className={s.name__contact}>\n              Association: {association} | <span> name: {name} | </span>\n              <span>number: {number} |</span>\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => handleDeleteContact(id)}\n            >\n              {' '}\n              DELETE contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nTodolist.propTypes = {\n  filterTextSearch: PropTypes.string.isRequired,\n  contacts: PropTypes.array.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\nexport default Todolist;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filterTextSearch, handleFilter }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filterTextSearch}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filterTextSearch: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport Form from './components/Forms/Form';\nimport TodoList from './components/Todolist/Todolist';\nimport Filter from './components/Filter/Filter';\n// import { v4 as uuid } from 'uuid';\n\nconst localStorageKey = 'contacts';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const currentTartegContsacts = JSON.parse(\n      localStorage.getItem(localStorageKey),\n    );\n\n    if (currentTartegContsacts) {\n      setContacts(currentTartegContsacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const hendlerSubmitForm = addContact =>\n    setContacts([...contacts, addContact]);\n\n  const handleFilter = e => setFilter(e.target.value);\n\n  const handleDeleteContact = id => {\n    const filtercontacts = contacts.filter(contact => contact.id !== id);\n    setContacts(filtercontacts);\n  };\n  // console.log(handleFilter);\n\n  return (\n    <div className=\"App\">\n      <Form hendlerSubmitForm={hendlerSubmitForm} contacts={contacts} />\n\n      <Filter filterTextSearch={filter} handleFilter={handleFilter} />\n\n      <TodoList\n        contacts={contacts}\n        filterTextSearch={filter}\n        handleDeleteContact={handleDeleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n// import Profile from '../src/components/profile/Profile';\r\n// import Statistics from './components/statistics/Statistics';\r\n// import statisticalData from  '../src/components/statistics/statistical-data.json';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__3ffF9\",\"item\":\"Todolist_item__1C8Xu\"};"],"sourceRoot":""}