{"version":3,"sources":["components/Filter/Filter.module.css","components/Forms/Form.js","components/Todolist/Todolist.js","components/Filter/Filter.js","App.js","index.js","components/Forms/Form.module.css","components/Todolist/Todolist.module.css"],"names":["module","exports","initialState","name","number","association","Form","contactsOll","hendlerSubmitForm","contactIdName","uuid","contactIdNumber","useState","contact","setContact","handleChange","e","target","value","onSubmit","preventDefault","console","log","alert","newContact","id","className","s","m","title","htmlFor","form__name","onChange","type","pattern","required","form__number","radio__btn","checked","Todolist","onDeleteContact","filterContactsOll","filteredContacts","filter","toLowerCase","includes","contacts__list","map","item","name__contact","btn","onClick","Filter","handleFilter","label","input","App","localStoragecontactsOll","setContactsOll","setFilter","useEffect","tartegContsact","JSON","parse","localStorage","getItem","setItem","stringify","OnSubmit","addContact","event","filtercontactsOll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee5afd1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__741XG\",\"input\":\"Filter_input__IBHzj\"};","import React from 'react';\nimport { useState } from 'react';\n// import { Component } from 'react';\nimport s from './Form.module.css';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = {\n  name: '',\n  number: '',\n  association: 'Other',\n};\n\nfunction Form(contactsOll, hendlerSubmitForm) {\n  let contactIdName = uuid();\n  let contactIdNumber = uuid();\n  const [contact, setContact] = useState(initialState);\n\n  // const [id, setId] = useState('');\n  // const [name, setName] = useState('');\n  // const [number, setNumber] = useState('');\n  // const [association, setAssociation] = useState('Other');\n\n  const handleChange = e => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n    // const { name, value } = e.currentTarget;\n    // switch (name) {\n    //   // case 'id':\n    //   //   setId(() => contactIdName);\n    //   //   break;\n    //   case 'name':\n    //     setName(value);\n    //     break;\n    //   case 'number':\n    //     setNumber(value);\n    //     break;\n    //   case 'association':\n    //     setAssociation(value);\n    //     break;\n    //   default:\n    //     break;\n  };\n  // console.log(setId(value));\n\n  const handleSabmit = e => {\n    e.preventDefault();\n    console.log('NAME', name);\n    console.log(contactsOll);\n    for (const { name } of contactsOll) {\n      if (name === contact.name) {\n        alert(`${name} is already in contacts`);\n\n        return;\n      }\n    }\n    const newContact = {\n      id: contactIdName,\n      name: contact.name,\n      number: contact.number,\n      association: contact.association,\n    };\n\n    hendlerSubmitForm(newContact);\n\n    setContact({ name: '', number: '', association: 'Other' });\n    // setId(() => contactIdName);\n    // console.log(id, name, number, association);\n    //  const { name, number, association } = this.state;\n    // this.setState({\n    //   // id,\n    //   name,\n    //   number,\n    //   association,\n    // });\n    // this.setState({ contactPhone });\n    // OnSubmit(name, number, association);\n\n    // setId('');\n    // setName('');\n    // setNumber('');\n    // setAssociation('Other');\n  };\n\n  // const resetForm = () => {\n  //    setId = '';\n  //    setName = '';\n  //    setNumber = '';\n  //   setAssociation = 'Other';\n  // };\n\n  const { name, number, association } = contact;\n  return (\n    <form onSubmit={handleSabmit} className={s.m}>\n      <h2 className={s.title}>Phonebook</h2>\n      <label htmlFor={contactIdName} className={s.form__name}>\n        Name\n        <input\n          id={contactIdName}\n          onChange={handleChange}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor={contactIdNumber} className={s.form__number}>\n        Number\n        <input\n          id={contactIdNumber}\n          onChange={handleChange}\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <div className={s.radio__btn}>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Work\"\n            onChange={handleChange}\n            checked={association === 'Work'}\n          />\n          Work\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Family\"\n            onChange={handleChange}\n            checked={association === 'Family'}\n          />\n          Family\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Friends\"\n            onChange={handleChange}\n            checked={association === 'Friends'}\n          />\n          Friends\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"association\"\n            value=\"Other\"\n            onChange={handleChange}\n            checked={association === 'Other'}\n          />\n          Other\n        </label>\n      </div>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n\nexport default Form;\n","import s from './Todolist.module.css';\nimport PropTypes from 'prop-types';\n// import { Form } from '../Forms/Form';\n// import { App } from '../../App';\n// import React, { Component } from 'react';\n\nfunction Todolist({ contactsOll, onDeleteContact, filterContactsOll }) {\n  console.log('LIST', contactsOll); // const filterContacts = contactsOll.filter({ name })=> name.toLowerCase().includes(filterContactsOll.toLowerCase());\n  const filteredContacts = contactsOll.filter(({ name }) =>\n    name.toLowerCase().includes(filterContactsOll.toLowerCase()),\n  );\n\n  return (\n    <ul className={s.contacts__list}>\n      {filteredContacts.map(({ id, name, number, association }) => {\n        return (\n          <li key={id} className={s.item}>\n            {' '}\n            <p className={s.name__contact}>\n              Association: {association} | <span> name: {name} | </span>\n              <span>number: {number} |</span>\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              {' '}\n              DELETE contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default Todolist;\n\nTodolist.propTypes = {\n  filterContactsOll: PropTypes.string.isRequired,\n  contactsOll: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filterContactsOll, handleFilter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filterContactsOll}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filterContactsOll: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import './App.css';\n// import { Component } from 'react';\nimport Form from './components/Forms/Form';\nimport TodoList from './components/Todolist/Todolist';\nimport Filter from './components/Filter/Filter';\n// import { v4 as uuid } from 'uuid';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const localStoragecontactsOll = 'contactsOll';\n  const [contactsOll, setContactsOll] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const tartegContsact = JSON.parse(\n      localStorage.getItem(localStoragecontactsOll),\n    );\n\n    if (tartegContsact) {\n      setContactsOll(tartegContsact);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStoragecontactsOll, JSON.stringify(contactsOll));\n  }, [contactsOll]);\n\n  const hendlerSubmitForm = addContact => {\n    setContactsOll([...contactsOll, addContact]);\n    // const contactId = uuid();\n    // const contact = {\n    //   id: contactId,\n    //   name,\n    //   number,\n    //   association,\n  };\n  const handleFilter = event => setFilter(event.target.value);\n  const deleteContact = id => {\n    const filtercontactsOll = contactsOll.filter(contact => contact.id !== id);\n    setFilter(filtercontactsOll);\n  };\n\n  return (\n    <div className=\"App\">\n      <Form OnSubmit={hendlerSubmitForm} contactsOll={contactsOll} />\n\n      <Filter filterContactsOll={filter} handleFilter={handleFilter} />\n\n      {/* <TodoList contactsOll={visibleContacts} onDeleteContact={deleteContact} /> */}\n      <TodoList\n        contactsOll={contactsOll}\n        filterContactsOll={filter}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n// import Profile from '../src/components/profile/Profile';\r\n// import Statistics from './components/statistics/Statistics';\r\n// import statisticalData from  '../src/components/statistics/statistical-data.json';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__2vhTC\",\"title\":\"Form_title__2DM7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__2p6pG\",\"item\":\"Todolist_item__3lhk8\"};"],"sourceRoot":""}